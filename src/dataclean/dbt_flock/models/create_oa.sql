
DROP TABLE IF EXISTS oa;
CREATE TABLE IF NOT EXISTS oa AS
WITH
temp_oa_joined AS
(
SELECT
ORD0.REFERENCE_NUMBERS1,
{% if filtering_ftl != 1 %}
ORD0.TRANSPORT_MODE,
{% endif %}
ORD0.TEMP_TIME_UNIT_SECOND, 
ORD0.ORDER_DATETIME_PST,
ORD0.TIME_BETWEEN_ORDER_AND_DEADLINE,
OFF0.CREATED_ON_HQ,
OFF0.LOAD_DELIVERED_FROM_OFFER,
OFF0.RATE_USD,
OFF0.OFFER_TYPE
FROM 
oa_orders_temp ORD0
LEFT OUTER JOIN
oa_offers_temp OFF0
ON
ORD0.REFERENCE_NUMBERS1 = OFF0.REFERENCE_NUMBERS1
),

-- cleans the joined table. Specifically, all rows where Transport mode = FTL should only correspond with 
-- offers with 1 order and offers of the type quote
-- if FTL's were filtered beforehand, that means just filter for quote = 1.
temp_oa_joined_cleaned AS
(
SELECT
OA0.*
FROM
temp_oa_joined OA0
{% if filtering_ftl == 1 %}
EXCEPT (SELECT OA1.* FROM temp_oa_joined OA1 WHERE OA1.TRANSPORT_MODE = 'FTL' AND OA1.OFFER_TYPE != 'quote')
{% else %}
WHERE OA0.OFFER_TYPE != 'quote' -- assumes transport_mode column isn't present and all of order's rows are FTL anyways
{% endif %}
),

-- add leadtime column with integrity checks
orders_lead_time AS
(
SELECT 
OA1.REFERENCE_NUMBERS1,
OA1.LEAD_TIME
FROM 
(SELECT
OA0.REFERENCE_NUMBERS1,
(
CASE 
WHEN
(least(OA0.ORDER_DATETIME_PST,OA0.CREATED_ON_HQ) = OA0.ORDER_DATETIME_PST)
THEN
(CAST(date_diff(OA0.TEMP_TIME_UNIT_SECOND, OA0.ORDER_DATETIME_PST,OA0.CREATED_ON_HQ) AS DECIMAL)/(OA0.TIME_BETWEEN_ORDER_AND_DEADLINE + 0.0001))
ELSE
NULL
END
)
AS LEAD_TIME
FROM
temp_oa_joined_cleaned OA0
WHERE OA0.LOAD_DELIVERED_FROM_OFFER = true
) OA1
WHERE 
(OA1.LEAD_TIME IS NOT NULL)
OR (OA1.LEAD_TIME = 0.0)
),


offers_aggregated AS
(
SELECT
OA0.REFERENCE_NUMBERS1,
STDDEV_POP(OA0.RATE_USD) AS SD_LOG_RATE_USD,
AVG(LN(OA0.RATE_USD+1)) AS LOG_RATE_USD,
COUNT(*) AS ORDER_OFFER_AMOUNT
FROM
temp_oa_joined_cleaned OA0
GROUP BY OA0.REFERENCE_NUMBERS1
),

oa as (
SELECT
ORD0.*,
OFF_A0.LOG_RATE_USD, OFF_A0.SD_LOG_RATE_USD, OFF_A0.ORDER_OFFER_AMOUNT,
ORD_LT0.LEAD_TIME
FROM oa_orders_temp ORD0
LEFT OUTER JOIN offers_aggregated OFF_A0 
ON ORD0.REFERENCE_NUMBERS1 = OFF_A0.REFERENCE_NUMBERS1
LEFT OUTER JOIN orders_lead_time ORD_LT0 
ON ORD0.REFERENCE_NUMBERS1 = ORD_LT0.REFERENCE_NUMBERS1
)

SELECT OA0.*
FROM
oa OA0
;
